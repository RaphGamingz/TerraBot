"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hurt = exports.itemsToWeight = exports.searchItem = exports.removeItem = exports.addItem = exports.itemsToString = exports.convertToString = void 0;
const locationData_1 = require("./data/locationData");
function convertToString(dic) {
    let itemString = "";
    for (let i = 0; i < Object.keys(dic).length; i++) {
        itemString += dic[Object.keys(dic)[i]] + " - ";
        itemString += Object.keys(dic)[i] + "\n";
    }
    return itemString;
}
exports.convertToString = convertToString;
function itemsToString(items) {
    let s = convertToString(items);
    if (s == "") {
        s = "Nothing";
    }
    return s;
}
exports.itemsToString = itemsToString;
function addItem(path, db, numberOfItems) {
    if (db.exists(path)) {
        db.push(path, db.getData(path) + numberOfItems, true);
    }
    else {
        db.push(path, numberOfItems, false);
    }
}
exports.addItem = addItem;
function removeItem(path, db, numberOfItems) {
    let amount = db.getData(path) - numberOfItems;
    if (amount <= 0) {
        db.delete(path);
    }
    else {
        db.push(path, amount, true);
    }
}
exports.removeItem = removeItem;
function searchItem(item, data) {
    let it = data[0];
    data.forEach(element => {
        if (element.name.toLowerCase() == item.toLowerCase()) {
            it = element;
        }
    });
    return it;
}
exports.searchItem = searchItem;
function itemsToWeight(items, data) {
    let weight = 0;
    for (let i = 0; i < Object.keys(items).length; i++) {
        let item = null;
        for (let u = 0; u < locationData_1.locationData.locations.length; u++) {
            if (item == null) {
                item = searchItem(Object.keys(items)[i], data[u]);
            }
        }
        if (item != null) {
            weight += item.weight * items[Object.keys(items)[i]];
        }
    }
    return weight;
}
exports.itemsToWeight = itemsToWeight;
function hurt(damage, db, userPath) {
    db.reload();
    if (db.getData(userPath + "/health") - damage > db.getData(userPath + "/maxHealth")) {
        db.push(userPath + "/health", db.getData(userPath + "/maxHealth"));
    }
    else {
        db.push(userPath + "/health", db.getData(userPath + "/health") - damage);
    }
}
exports.hurt = hurt;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0Esc0RBQW1EO0FBR25ELFNBQWdCLGVBQWUsQ0FBQyxHQUFRO0lBQ3BDLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQztJQUNwQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDOUMsVUFBVSxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQy9DLFVBQVUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQztLQUM1QztJQUNELE9BQU8sVUFBVSxDQUFDO0FBQ3RCLENBQUM7QUFQRCwwQ0FPQztBQUVELFNBQWdCLGFBQWEsQ0FBQyxLQUFVO0lBQ3BDLElBQUksQ0FBQyxHQUFHLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDVCxDQUFDLEdBQUcsU0FBUyxDQUFDO0tBQ2pCO0lBQ0QsT0FBTyxDQUFDLENBQUM7QUFDYixDQUFDO0FBTkQsc0NBTUM7QUFFRCxTQUFnQixPQUFPLENBQUMsSUFBWSxFQUFFLEVBQVUsRUFBRSxhQUFxQjtJQUNuRSxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDakIsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDekQ7U0FBTTtRQUNILEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxF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